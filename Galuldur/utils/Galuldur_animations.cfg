#textdomain wesnoth-Galuldur

############################################################################
# The EXTRA_ANIM_* macros are for playing new animations for units or on   #
# hexes using the [extra_anim] tags. Empty hexes are dealt with by putting #
# an invisible unit there.                                                 #
############################################################################
# This is a subset of those used in Grnk

#define EXTRA_ANIM_UNIT_NO_STORE ID ANIM_WML
    # Play animation for a unit; it is assumed that the unit is already
    # stored in a variable when this macro is called. Reasons might be to avoid
    # overhead if the unit is already stored, or because storing is unnecessary
    # because it will be killed at the end anyway.
    # @ID: id of the unit
    # @ANIM_WML: WML code to go into the [extra_anim] tag, excl. the flag

    [object]
        silent=yes

        [filter]
            id={ID}
        [/filter]

        [effect]
            apply_to=new_animation

            [extra_anim]
                flag=EAU_animation
                {ANIM_WML}
            [/extra_anim]
        [/effect]
    [/object]

    [animate_unit]
        [filter]
            id={ID}
        [/filter]

        flag=EAU_animation
    [/animate_unit]
#enddef

#define EXTRA_ANIM_UNIT ID ANIM_WML
    # Play animation for a unit. Unlike EXTRA_ANIM_UNIT_NO_STORE, this stores
    # the unit into variable EA_unit first and unstores is afterward to
    # remove the animation from the unit again.
    # @ID: id of the unit
    # @ANIM_WML: WML code to go into the [extra_anim] tag, excl. the flag

    [store_unit]
        [filter]
            id={ID}
        [/filter]

        variable=EAU_unit
    [/store_unit]

    {EXTRA_ANIM_UNIT_NO_STORE {ID} {ANIM_WML}}

    [unstore_unit]
        variable=EAU_unit
    [/unstore_unit]

    {CLEAR_VARIABLE EAU_unit}
#enddef

#define BURN_FOREST LOCATION_FILTER
    # Replace forest by burnt forest tiles
    # Note: a redraw might be required afterward

    # Forest on flats
    [store_locations]
        terrain=Gs^F*,Gg^F*
        [and]
            {LOCATION_FILTER}
        [/and]

        variable=forest_flats
    [/store_locations]

    {FOREACH forest_flats i}
        {MODIFY_TERRAIN Gs^Fdw $forest_flats[$i].x $forest_flats[$i].y}
    {NEXT i}

    {CLEAR_VARIABLE forest_flats}

    # Forest on hills
    [store_locations]
        terrain=Hh^F*
        [and]
            {LOCATION_FILTER}
        [/and]
        variable=forest_hills
    [/store_locations]

    {FOREACH forest_hills i}
        {MODIFY_TERRAIN Hh^Fdw $forest_hills[$i].x $forest_hills[$i].y}
    {NEXT i}

    {CLEAR_VARIABLE forest_hills}
#enddef

#define BURN_ON_MOVE_S8_10 SIDES
    # Event: trees get burnt as enemy units move - Scenarioes 8 & 10
    #   This does not do all the same as in Scen 4 (there is no limit, and no defeat event)
    [event]
        name=moveto
        first_time_only=no

        [filter]
            side={SIDES}
        [/filter]

        {BURN_FOREST (
            x,y=$x1,$y1
            radius=1
        )}
    [/event]
#enddef

#define PLACE_AND_REMOVE_ITEM HALO X Y DELAY_TIME
    [item]
        x,y={X},{Y}
        halo={HALO}
    [/item]
    {DELAY {DELAY_TIME}}
    [remove_item]
        x,y={X},{Y}
    [/remove_item]
#enddef

#define FIREBALL X Y
    {SOUND fire.wav}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-1.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-2.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-3.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-4.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-5.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-6.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-7.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-8.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-9.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-10.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-11.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-12.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-13.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-14.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-15.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-16.png {X} {Y} 60}
#enddef

#define FIREBALL_KILL ID
    # Kill a unit with a fireball and blackening animation
    # @ID: the id of the unit

    {EXTRA_ANIM_UNIT {ID} (
        blend_color=0,0,0
        blend_ratio=0~1:600,1:400
        alpha=1:600,1~-0.5:400
        [frame]
            image=$EAU_unit.image:1000
            halo=projectiles/fireball-impact-[1~16].png:60
            halo_y=-12
            sound=fire.wav
        [/frame]
    )}

    [kill]
        id={ID}
        fire_event=yes
    [/kill]
#enddef

#define TELEPORT_ANIM_OUT X Y
    {SCROLL_TO {X} {Y}}
    {PLACE_AND_REMOVE_ITEM halo/teleport-9.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-8.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-7.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-6.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-5.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-4.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-3.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-2.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-1.png {X} {Y} 60}
#enddef

#define TELEPORT_ANIM_IN X Y
    {SCROLL_TO {X} {Y}}
    {PLACE_AND_REMOVE_ITEM halo/teleport-1.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-2.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-3.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-4.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-5.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-6.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-7.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-8.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-9.png {X} {Y} 60}
#enddef

#define TELEPORT_AWAY FILTER X_ORG Y_ORG DISTANCE
    # Teleport a unit a given distance away from a certain location (not necessarily its own position)

    # Find the old location of the unit
    {STORE_UNIT_VAR {FILTER} x old_x}
    {STORE_UNIT_VAR {FILTER} y old_y}

    # Actions at the old location
    {SOUND entangle.wav}
    {TELEPORT_ANIM_OUT $old_x $old_y}
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=teleported_unit
        kill=yes
        animate=yes
    [/store_unit]

    # Find the new location, DISTANCE away from X_ORG,Y_ORG
    {FAR_EMPTY_HEX {X_ORG} {Y_ORG} Ql,Wo {DISTANCE}}

    # Unstore at the new location
    {TELEPORT_ANIM_IN $hex_x $hex_y}
    [unstore_unit]
        variable=teleported_unit
        x,y=$hex_x,$hex_y
        animate=yes
    [/unstore_unit]

    # Capture village, in case unit ends up on one
    {CAPTURE_FILTERED_VILLAGES_COPY $teleported_unit.side x,y=$hex_x,$hex_y}

    {CLEAR_VARIABLE old_x,old_y,teleported_unit,hex_x,hex_y}
#enddef

#########################################
# Moving units over the map edge macros #
#########################################

# This is a subset of those in Grnk , with minor modifications (such as ID -> FILTER)

#define MOVE_UNIT_OFF_MAP_CORE FILTER FACING WML
    # Core macro for MOVE_UNIT_OFF_MAP and MOVE_UNIT_TO_EDGE_AND_OFF_MAP
    # Do not use this by itself
    # @WML: code to be added before moving the unit off the map

    # !!!! Do not use the EXTRA_ANIM macros here, so that there is as little
    # !!!! as possible of a gap between moving the extra WML and moving the unit off

    [store_unit]
        [filter]
            {FILTER}
        [/filter]

        variable=MUOM_unit
    [/store_unit]

    [object]
        silent=yes

        [filter]
            {FILTER}
        [/filter]

        [effect]
            apply_to=new_animation

            [extra_anim]
                flag=disappear
                offset=0~2:400
                [frame]
                    image=$MUOM_unit.image:400
                [/frame]
            [/extra_anim]
        [/effect]
    [/object]
    {CLEAR_VARIABLE MUOM_unit}

    {WML}

    [modify_unit]
        [filter]
            {FILTER}
        [/filter]

        facing={FACING}
    [/modify_unit]

    [animate_unit]
        [filter]
            {FILTER}
        [/filter]

        flag=disappear
    [/animate_unit]
#enddef

#define MOVE_UNIT_TO_EDGE_AND_OFF_MAP FILTER X Y FACING
    # Same as MOVE_UNIT_OFF_MAP, but also moves it to the edge at coordinates
    # @x,@Y first, to make the transition smoother if it is desired to do it
    # in one motion, rather than stopping at the edge with a message or something.
    # @FILTER should match an individual unit, otherwise it doesn't quite work as desired.

    {MOVE_UNIT_OFF_MAP_CORE {FILTER} {FACING} (
        {MOVE_UNIT {FILTER} {X} {Y}}
    )}

    [kill]
        {FILTER}
    [/kill]
#enddef
