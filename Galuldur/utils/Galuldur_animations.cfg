#textdomain wesnoth-Galuldur

#define MOVE_AND_KILL FILTER X Y
    {MOVE_UNIT {FILTER} {X} {Y}}
    [kill]
        {FILTER}
    [/kill]
#enddef

#define BURN_FOREST LOCATION_FILTER
    # Replace forest by burnt forest tiles
    # Note: a redraw might be required afterward

    # Forest on flats
    [store_locations]
        terrain=Gs^F*,Gg^F*
        [and]
            {LOCATION_FILTER}
        [/and]

        variable=forest_flats
    [/store_locations]

    {FOREACH forest_flats i}
        {MODIFY_TERRAIN Gs^Fdw $forest_flats[$i].x $forest_flats[$i].y}
    {NEXT i}

    {CLEAR_VARIABLE forest_flats}

    # Forest on hills
    [store_locations]
        terrain=Hh^F*
        [and]
            {LOCATION_FILTER}
        [/and]
        variable=forest_hills
    [/store_locations]

    {FOREACH forest_hills i}
        {MODIFY_TERRAIN Hh^Fdw $forest_hills[$i].x $forest_hills[$i].y}
    {NEXT i}

    {CLEAR_VARIABLE forest_hills}
#enddef

#define BURN_ON_MOVE_S8_10 SIDES
    # Event: trees get burnt as enemy units move - Scenarioes 8 & 10
    #   This does not do all the same as in Scen 4 (there is no limit, and no defeat event)
    [event]
        name=moveto
        first_time_only=no

        [filter]
            side={SIDES}
        [/filter]

        {BURN_FOREST (
            x,y=$x1,$y1
            radius=1
        )}
    [/event]
#enddef

#define PLACE_AND_REMOVE_ITEM HALO X Y DELAY_TIME
    [item]
        x,y={X},{Y}
        halo={HALO}
    [/item]
    {DELAY {DELAY_TIME}}
    [remove_item]
        x,y={X},{Y}
    [/remove_item]
#enddef

#define FIREBALL X Y
    {SOUND fire.wav}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-1.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-2.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-3.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-4.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-5.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-6.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-7.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-8.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-9.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-10.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-11.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-12.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-13.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-14.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-15.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM projectiles/fireball-impact-16.png {X} {Y} 60}
#enddef

#define TELEPORT_ANIM_OUT X Y
    {SCROLL_TO {X} {Y}}
    {PLACE_AND_REMOVE_ITEM halo/teleport-9.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-8.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-7.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-6.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-5.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-4.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-3.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-2.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-1.png {X} {Y} 60}
#enddef

#define TELEPORT_ANIM_IN X Y
    {SCROLL_TO {X} {Y}}
    {PLACE_AND_REMOVE_ITEM halo/teleport-1.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-2.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-3.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-4.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-5.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-6.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-7.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-8.png {X} {Y} 60}
    {PLACE_AND_REMOVE_ITEM halo/teleport-9.png {X} {Y} 60}
#enddef

#define TELEPORT_AWAY FILTER X_ORG Y_ORG DISTANCE
    # Teleport a unit a given distance away from a certain location (not necessarily its own position)

    # Find the old location of the unit
    {STORE_UNIT_VAR {FILTER} x old_x}
    {STORE_UNIT_VAR {FILTER} y old_y}

    # Actions at the old location
    {SOUND entangle.wav}
    {TELEPORT_ANIM_OUT $old_x $old_y}
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=teleported_unit
        kill=yes
        animate=yes
    [/store_unit]

    # Find the new location, DISTANCE away from X_ORG,Y_ORG
    {FAR_EMPTY_HEX {X_ORG} {Y_ORG} Ql,Wo {DISTANCE}}

    # Unstore at the new location
    {TELEPORT_ANIM_IN $hex_x $hex_y}
    [unstore_unit]
        variable=teleported_unit
        x,y=$hex_x,$hex_y
        animate=yes
    [/unstore_unit]

    # Capture village, in case unit ends up on one
    {CAPTURE_FILTERED_VILLAGES_COPY $teleported_unit.side x,y=$hex_x,$hex_y}

    {CLEAR_VARIABLE old_x,old_y,teleported_unit,hex_x,hex_y}
#enddef
